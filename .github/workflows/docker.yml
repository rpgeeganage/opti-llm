name: Docker Build & Push

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service: [api, dashboard]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test-docker-compose:
    name: Test Docker Compose
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test development Docker Compose
        run: |
          echo "Testing development Docker Compose configuration..."
          docker compose -f docker/compose.dev.yml config
          echo "✅ Development Docker Compose configuration is valid"

      - name: Test production Docker Compose
        run: |
          echo "Testing production Docker Compose configuration..."
          docker compose -f docker/compose.prod.yml config
          echo "✅ Production Docker Compose configuration is valid"

      - name: Test Docker Compose with services
        run: |
          echo "Testing Docker Compose services startup..."
          docker compose -f docker/compose.dev.yml up --build -d
          sleep 30

          # Check if services are running
          docker compose -f docker/compose.dev.yml ps

          # Test API health
          curl -f http://localhost:3000/health || echo "API health check failed"

          # Test Dashboard
          curl -f http://localhost:3001 || echo "Dashboard health check failed"

          # Cleanup
          docker compose -f docker/compose.dev.yml down
